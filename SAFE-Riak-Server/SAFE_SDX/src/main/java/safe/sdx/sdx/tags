!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
IPPrefix	SdxServer.java	/^  private static String IPPrefix="192.168.";$/;"	f	class:SdxServer	file:
Link	Link.java	/^class Link{$/;"	c
OVSController	SdxServer.java	/^  private static String OVSController;$/;"	f	class:SdxServer	file:
RLink	RoutingManager.java	/^  public RLink(String ia, String ib, String routera, String routerb){$/;"	m	class:RLink	signature:(String ia, String ib, String routera, String routerb)
RLink	RoutingManager.java	/^class RLink{$/;"	c
RequestResource	SdxClient.java	/^	private static final String RequestResource = null;$/;"	f	class:SdxClient	file:
RequestResource	SdxServer.java	/^	private static final String RequestResource = null;$/;"	f	class:SdxServer	file:
Router	RoutingManager.java	/^    public Router(String rid, String switch_id,  int numintf){$/;"	m	class:Router	signature:(String rid, String switch_id, int numintf)
Router	RoutingManager.java	/^class Router{$/;"	c
RoutingManager	RoutingManager.java	/^public class RoutingManager{$/;"	c
SDNController	SdxServer.java	/^  private static String SDNController;$/;"	f	class:SdxServer	file:
SDNControllerIP	SdxClient.java	/^  private static String SDNControllerIP;$/;"	f	class:SdxClient	file:
SDNControllerIP	SdxServer.java	/^  private static String SDNControllerIP;$/;"	f	class:SdxServer	file:
SdxClient	SdxClient.java	/^  public SdxClient()throws RemoteException{}$/;"	m	class:SdxClient	signature:()
SdxClient	SdxClient.java	/^public class SdxClient {$/;"	c
SdxServer	SdxServer.java	/^  public SdxServer()throws RemoteException{}$/;"	m	class:SdxServer	signature:()
SdxServer	SdxServer.java	/^public class SdxServer extends UnicastRemoteObject implements ServiceAPI {$/;"	c
ServiceAPI	ServiceAPI.java	/^public interface ServiceAPI extends java.rmi.Remote$/;"	i
addEntry_HashList	RoutingManager.java	/^  private void addEntry_HashList(HashMap<String,ArrayList<String>>  map,String key, String entry){$/;"	m	class:RoutingManager	file:	signature:(HashMap<String,ArrayList<String>> map,String key, String entry)
addEntry_HashList	SdxServer.java	/^  private void addEntry_HashList(HashMap<String,ArrayList<String>>  map,String key, String entry){$/;"	m	class:SdxServer	file:	signature:(HashMap<String,ArrayList<String>> map,String key, String entry)
addInterface	RoutingManager.java	/^    public void addInterface(String interfaceIP){$/;"	m	class:Router	signature:(String interfaceIP)
addLink	RoutingManager.java	/^  public  void addLink(String ipa, String ra){$/;"	m	class:RoutingManager	signature:(String ipa, String ra)
addLink	RoutingManager.java	/^  public  void addLink(String ipa, String ra, String ipb,String rb){$/;"	m	class:RoutingManager	signature:(String ipa, String ra, String ipb,String rb)
addNeighbor	RoutingManager.java	/^    public void addNeighbor(String neighborIP){$/;"	m	class:Router	signature:(String neighborIP)
addNode	Link.java	/^  public void addNode(String node){$/;"	m	class:Link	signature:(String node)
addRouter	RoutingManager.java	/^  public  void addRouter(String routerid, String dpid, int numinterfaces){$/;"	m	class:RoutingManager	signature:(String routerid, String dpid, int numinterfaces)
addrCMD	RoutingManager.java	/^  private  String addrCMD(String addr, String dpid, String controller){$/;"	m	class:RoutingManager	file:	signature:(String addr, String dpid, String controller)
advertisements	SdxServer.java	/^  private static ArrayList<String[]> advertisements=new ArrayList<String[]>();$/;"	f	class:SdxServer	file:
authorizePrefix	SdxServer.java	/^  private boolean authorizePrefix(String srchash, String srcip, String dsthash, String dstip){$/;"	m	class:SdxServer	file:	signature:(String srchash, String srcip, String dsthash, String dstip)
authorizeStitchRequest	SdxServer.java	/^  public static boolean authorizeStitchRequest(String customer_keyhash,String customerName,String ReservID,String server_keyhash,String slicename, String nodename){$/;"	m	class:SdxServer	signature:(String customer_keyhash,String customerName,String ReservID,String server_keyhash,String slicename, String nodename)
computeIP	SdxServer.java	/^  private static  void computeIP(String prefix){$/;"	m	class:SdxServer	file:	signature:(String prefix)
configOSPFForNewInterface	SdxClient.java	/^  private static void configOSPFForNewInterface(ComputeNode c, String newip){$/;"	m	class:SdxClient	file:	signature:(ComputeNode c, String newip)
configRouting	SdxServer.java	/^  public static void configRouting(Slice s,String ovscontroller, String httpcontroller){$/;"	m	class:SdxServer	signature:(Slice s,String ovscontroller, String httpcontroller)
configurePath	RoutingManager.java	/^  public void configurePath(String dest, String nodename, String gateway, String controller) {$/;"	m	class:RoutingManager	signature:(String dest, String nodename, String gateway, String controller)
configurePath	RoutingManager.java	/^  public void configurePath(String dest, String nodename,String targetIP,String targetnodename, String gateway, String controller) {$/;"	m	class:RoutingManager	signature:(String dest, String nodename,String targetIP,String targetnodename, String gateway, String controller)
controllerUrl	SdxClient.java	/^	private static String controllerUrl;$/;"	f	class:SdxClient	file:
controllerUrl	SdxServer.java	/^	private static String controllerUrl;$/;"	f	class:SdxServer	file:
copyFile2Slice	SdxServer.java	/^  private static void copyFile2Slice(Slice s, String lfile, String rfile,String privkey){$/;"	m	class:SdxServer	file:	signature:(Slice s, String lfile, String rfile,String privkey)
curip	SdxClient.java	/^  private static int curip=128;$/;"	f	class:SdxClient	file:
curip	SdxServer.java	/^  private static int curip=128;$/;"	f	class:SdxServer	file:
customer_keyhash	SdxClient.java	/^  private static String customer_keyhash;$/;"	f	class:SdxClient	file:
domains	SdxClient.java	/^	public static final ArrayList<String> domains;$/;"	f	class:SdxClient
domains	SdxServer.java	/^	public static final ArrayList<String> domains;$/;"	f	class:SdxServer
dpid	RoutingManager.java	/^    private String dpid="";$/;"	f	class:Router	file:
equals	RoutingManager.java	/^  public boolean equals(RLink link){$/;"	m	class:RLink	signature:(RLink link)
getAllElments_HashList	SdxServer.java	/^  private ArrayList<String[]> getAllElments_HashList(HashMap<String,ArrayList<String>>  map){$/;"	m	class:SdxServer	file:	signature:(HashMap<String,ArrayList<String>> map)
getBroadcastRoutes	RoutingManager.java	/^  private  ArrayList<String[]> getBroadcastRoutes(String gwdpid, String gateway){$/;"	m	class:RoutingManager	file:	signature:(String gwdpid, String gateway)
getDPID	RoutingManager.java	/^    public String getDPID(){$/;"	m	class:Router	signature:()
getDPID	RoutingManager.java	/^  public  String getDPID(String routerid){$/;"	m	class:RoutingManager	signature:(String routerid)
getIP	Link.java	/^  public String  getIP(int i){$/;"	m	class:Link	signature:(int i)
getInterfaceNum	RoutingManager.java	/^    public int getInterfaceNum(){$/;"	m	class:Router	signature:()
getNeighborIPs	RoutingManager.java	/^  private  ArrayList<String> getNeighborIPs(String routerid){$/;"	m	class:RoutingManager	file:	signature:(String routerid)
getNeighbors	RoutingManager.java	/^    public HashSet<String> getNeighbors(){$/;"	m	class:Router	signature:()
getNetworkInfo	SdxClient.java	/^  public static void getNetworkInfo(Slice s){$/;"	m	class:SdxClient	signature:(Slice s)
getNetworkInfo	SdxServer.java	/^  public static void getNetworkInfo(Slice s){$/;"	m	class:SdxServer	signature:(Slice s)
getOVSScript	SdxClient.java	/^  private static String getOVSScript(String cip){$/;"	m	class:SdxClient	file:	signature:(String cip)
getPairIP	RoutingManager.java	/^  private  String getPairIP(String ip){$/;"	m	class:RoutingManager	file:	signature:(String ip)
getPairRouter	RoutingManager.java	/^  private  String getPairRouter(String ip){$/;"	m	class:RoutingManager	file:	signature:(String ip)
getPairRoutes	RoutingManager.java	/^  private ArrayList<String[]> getPairRoutes(String srcdpid, String dstdpid, String gateway){$/;"	m	class:RoutingManager	file:	signature:(String srcdpid, String dstdpid, String gateway)
getQuaggaScript	SdxClient.java	/^  private static  String getQuaggaScript(){$/;"	m	class:SdxClient	file:	signature:()
getRouter	RoutingManager.java	/^  public  Router getRouter(String routername){$/;"	m	class:RoutingManager	signature:(String routername)
getRouterByDPID	RoutingManager.java	/^  private  Router getRouterByDPID(String routername){$/;"	m	class:RoutingManager	file:	signature:(String routername)
getRouterID	RoutingManager.java	/^    public String getRouterID(){$/;"	m	class:Router	signature:()
getSlice	SdxClient.java	/^	public static Slice getSlice(ISliceTransportAPIv1 sliceProxy, String sliceName){$/;"	m	class:SdxClient	signature:(ISliceTransportAPIv1 sliceProxy, String sliceName)
getSlice	SdxServer.java	/^	public static Slice getSlice(ISliceTransportAPIv1 sliceProxy, String sliceName){$/;"	m	class:SdxServer	signature:(ISliceTransportAPIv1 sliceProxy, String sliceName)
getSliceProxy	SdxClient.java	/^	public static ISliceTransportAPIv1 getSliceProxy(String pem, String key, String controllerUrl){$/;"	m	class:SdxClient	signature:(String pem, String key, String controllerUrl)
getSliceProxy	SdxServer.java	/^	public static ISliceTransportAPIv1 getSliceProxy(String pem, String key, String controllerUrl){$/;"	m	class:SdxServer	signature:(String pem, String key, String controllerUrl)
ifa	RoutingManager.java	/^  private String ifa="";$/;"	f	class:RLink	file:
ifb	RoutingManager.java	/^  private String ifb="";$/;"	f	class:RLink	file:
interfaces	RoutingManager.java	/^    private HashSet<String> interfaces=new HashSet<String>();$/;"	f	class:Router	file:
ip_router	RoutingManager.java	/^  private  ArrayList<String[]>ip_router=new ArrayList<String[]>();$/;"	f	class:RoutingManager	file:
ipprefix	Link.java	/^  public String ipprefix="";$/;"	f	class:Link
keyLocation	SdxClient.java	/^	private static String keyLocation;$/;"	f	class:SdxClient	file:
keyLocation	SdxServer.java	/^	private static String keyLocation;$/;"	f	class:SdxServer	file:
linkname	Link.java	/^  public String linkname="";$/;"	f	class:Link
links	RoutingManager.java	/^  private  ArrayList<String[]>links=new ArrayList<String[]>();$/;"	f	class:RoutingManager	file:
links	SdxClient.java	/^  private static HashMap<String, Link> links=new HashMap<String, Link>();$/;"	f	class:SdxClient	file:
links	SdxServer.java	/^  private static HashMap<String, Link> links=new HashMap<String, Link>();$/;"	f	class:SdxServer	file:
main	SdxClient.java	/^	public static void main(String [] args){$/;"	m	class:SdxClient	signature:(String [] args)
main	SdxServer.java	/^	public static void main(String [] args){$/;"	m	class:SdxServer	signature:(String [] args)
mask	Link.java	/^  public String mask="";$/;"	f	class:Link
mask	SdxServer.java	/^  private static String mask="\/24";$/;"	f	class:SdxServer	file:
neighbors	RoutingManager.java	/^    private HashSet<String> neighbors=new HashSet<String>();$/;"	f	class:Router	file:
newLink	RoutingManager.java	/^  public void newLink(String ipa, String ra, String controller) {$/;"	m	class:RoutingManager	signature:(String ipa, String ra, String controller)
newLink	RoutingManager.java	/^  public void newLink(String ipa, String ra, String ipb, String rb, String controller){$/;"	m	class:RoutingManager	signature:(String ipa, String ra, String ipb, String rb, String controller)
newRouter	RoutingManager.java	/^  public void newRouter(String routerid, String dpid, int numInterfaces) {$/;"	m	class:RoutingManager	signature:(String routerid, String dpid, int numInterfaces)
nodea	Link.java	/^  public String nodea="";$/;"	f	class:Link
nodeb	Link.java	/^  public String nodeb="";$/;"	f	class:Link
notifyPrefix	SdxServer.java	/^  public void notifyPrefix(String dest, String gateway, String router,String customer_keyhash) throws RemoteException{$/;"	m	class:SdxServer	signature:(String dest, String gateway, String router,String customer_keyhash)
notifyPrefix	ServiceAPI.java	/^  void notifyPrefix(String dest, String gateway, String router,String customer_keyhash) throws RemoteException;$/;"	m	interface:ServiceAPI	signature:(String dest, String gateway, String router,String customer_keyhash)
numInterfaces	RoutingManager.java	/^    private int numInterfaces=0;$/;"	f	class:Router	file:
pair_ip	RoutingManager.java	/^  public String pair_ip(String ip){$/;"	m	class:RLink	signature:(String ip)
pemLocation	SdxClient.java	/^	private static String pemLocation;$/;"	f	class:SdxClient	file:
pemLocation	SdxServer.java	/^	private static String pemLocation;$/;"	f	class:SdxServer	file:
postSafeStitchRequest	SdxClient.java	/^  private static boolean postSafeStitchRequest(String customer_keyhash,String customerName,String ReservID,String slicename, String nodename){$/;"	m	class:SdxClient	file:	signature:(String customer_keyhash,String customerName,String ReservID,String slicename, String nodename)
println	RoutingManager.java	/^  private  void println(String out){$/;"	m	class:RoutingManager	file:	signature:(String out)
processStitchCmd	SdxClient.java	/^  private static void processStitchCmd(String[] params){$/;"	m	class:SdxClient	file:	signature:(String[] params)
putLink	RoutingManager.java	/^  private  void putLink(String linka, String linkb){$/;"	m	class:RoutingManager	file:	signature:(String linka, String linkb)
putPairRouter	RoutingManager.java	/^  private  void putPairRouter(String ip,String dpid){$/;"	m	class:RoutingManager	file:	signature:(String ip,String dpid)
putRouter	RoutingManager.java	/^  private  void putRouter(Router router){$/;"	m	class:RoutingManager	file:	signature:(Router router)
ra	RoutingManager.java	/^  private String ra="";$/;"	f	class:RLink	file:
rb	RoutingManager.java	/^  private String rb="";$/;"	f	class:RLink	file:
replayCmds	RoutingManager.java	/^  public void replayCmds(String dpid){$/;"	m	class:RoutingManager	signature:(String dpid)
routerid	RoutingManager.java	/^    private String routerid="";$/;"	f	class:Router	file:
routers	RoutingManager.java	/^  private  ArrayList<Router> routers=new ArrayList<Router>();$/;"	f	class:RoutingManager	file:
routingCMD	RoutingManager.java	/^  private  String routingCMD(String dst,String gw, String dpid, String controller){$/;"	m	class:RoutingManager	file:	signature:(String dst,String gw, String dpid, String controller)
routingCMD	RoutingManager.java	/^  private  String routingCMD(String dst,String src,String gw, String dpid, String controller){$/;"	m	class:RoutingManager	file:	signature:(String dst,String src,String gw, String dpid, String controller)
routingmanager	SdxServer.java	/^  private static RoutingManager routingmanager=new RoutingManager();$/;"	f	class:SdxServer	file:
runCmdSlice	SdxServer.java	/^  private static void runCmdSlice(Slice s, String cmd, String privkey){$/;"	m	class:SdxServer	file:	signature:(Slice s, String cmd, String privkey)
safe.sdx	Link.java	/^package safe.sdx;$/;"	p
safe.sdx	RoutingManager.java	/^package safe.sdx;$/;"	p
safe.sdx	SdxClient.java	/^package safe.sdx;$/;"	p
safe.sdx	SdxServer.java	/^package safe.sdx;$/;"	p
safe.sdx	ServiceAPI.java	/^package safe.sdx;$/;"	p
safeserver	SdxClient.java	/^  private static String safeserver=null;$/;"	f	class:SdxClient	file:
safeserver	SdxServer.java	/^	private static String safeserver;$/;"	f	class:SdxServer	file:
sctx	SdxClient.java	/^  private static SliceAccessContext<SSHAccessToken> sctx;$/;"	f	class:SdxClient	file:
sctx	SdxServer.java	/^  private static SliceAccessContext<SSHAccessToken> sctx;$/;"	f	class:SdxServer	file:
sdncmds	RoutingManager.java	/^  private HashMap<String, ArrayList<String>> sdncmds=new HashMap<String,ArrayList<String>>();$/;"	f	class:RoutingManager	file:
server_keyhash	SdxServer.java	/^  private static String server_keyhash;$/;"	f	class:SdxServer	file:
setIP	Link.java	/^  public void setIP(String ip){$/;"	m	class:Link	signature:(String ip)
setMask	Link.java	/^  public void setMask(String m){$/;"	m	class:Link	signature:(String m)
setName	Link.java	/^  public void setName(String name){$/;"	m	class:Link	signature:(String name)
sleep	SdxClient.java	/^	public static void sleep(int sec){$/;"	m	class:SdxClient	signature:(int sec)
sleep	SdxServer.java	/^	public static void sleep(int sec){$/;"	m	class:SdxServer	signature:(int sec)
sliceName	SdxClient.java	/^	private static String sliceName;$/;"	f	class:SdxClient	file:
sliceName	SdxServer.java	/^	private static String sliceName;$/;"	f	class:SdxServer	file:
sliceProxy	SdxClient.java	/^  private static ISliceTransportAPIv1 sliceProxy;$/;"	f	class:SdxClient	file:
sliceProxy	SdxServer.java	/^  private static ISliceTransportAPIv1 sliceProxy;$/;"	f	class:SdxServer	file:
sshkey	SdxClient.java	/^  private static String sshkey;$/;"	f	class:SdxClient	file:
sshkeyLocation	SdxServer.java	/^  private static String sshkeyLocation;$/;"	f	class:SdxServer	file:
stitch	SdxServer.java	/^	public static void stitch(String carrierName, String RID,String customerName, String CID,String secret,String newip){	$/;"	m	class:SdxServer	signature:(String carrierName, String RID,String customerName, String CID,String secret,String newip)
stitchRequest	SdxServer.java	/^  public String stitchRequest(String carrierName,String nodeName, String customer_keyhash,String customerName, String ResrvID,String secret) {$/;"	m	class:SdxServer	signature:(String carrierName,String nodeName, String customer_keyhash,String customerName, String ResrvID,String secret)
stitchRequest	ServiceAPI.java	/^  String stitchRequest(String slicename, String nodename, String customer_keyhash,String customerName, String ResrvID,String secret) throws RemoteException;$/;"	m	interface:ServiceAPI	signature:(String slicename, String nodename, String customer_keyhash,String customerName, String ResrvID,String secret)
undoStitch	SdxClient.java	/^	public static void undoStitch(String carrierName, String customerName, String netName, String nodeName){	$/;"	m	class:SdxClient	signature:(String carrierName, String customerName, String netName, String nodeName)
undoStitch	SdxServer.java	/^	public static void undoStitch(String carrierName, String customerName, String netName, String nodeName){	$/;"	m	class:SdxServer	signature:(String carrierName, String customerName, String netName, String nodeName)
updateInterfaceNum	RoutingManager.java	/^    public void updateInterfaceNum(int newnum){$/;"	m	class:Router	signature:(int newnum)
waitTillActive	SdxClient.java	/^  public static void waitTillActive(Slice s){$/;"	m	class:SdxClient	signature:(Slice s)
