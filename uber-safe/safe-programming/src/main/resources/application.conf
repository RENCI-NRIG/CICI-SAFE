# The application languages
# ========================= #
application.langs="en"


# Logger
# ====== #
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml or logback.xml file in the conf directory

# Root logger:
#logger.root=WARN

# Logger used by the framework:
#logger.play=INFO

# Logger provided to your application:
#logger.application=DEBUG


# Akka
# ======= #
akka.log-config-on-start = on

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  #loglevel = INFO
  loglevel = ${?LOGLEVEL}

  actor.debug = {
    receive = on
    autoreceive = on
    lifecycle = on
  }
}

spray.can {
  client {
    request-timeout = 500s
    idle-timeout = 501s
  }
  
  host-connector {
    max-connections = 200
  }
} 

safelang {
  loglevel = OFF
  loglevel = ${?LOGLEVEL}
  
  intraQueryParallelism = false
  saysOperator = true
  self = Self
  compilePath=compiledTarget
  credentialPath=credentialTarget
  resultCache = false
  akkaTimeout = 500s

  # For use of local safesets
  safeSetsDir = "src/main/resources/local-safesets/"
  localSafeSets=true
  slangPerfFile = "slangPerf"
  perfCollectorOn = true

  selfCertifyingSetToken=false

  ssl {
    keystorepath = "src/main/resources/ssl-keystores/clientkeystore.pkcs12"
  }

  metastore {
    url = "http://152.3.145.36:8098/types/safesets/buckets/safe/keys"
    protocol = "http"
    serverID = ""
  }
}

# This is actually for terms in safelang
# Common terms in safelang are slog terms
# or extend slog term. The toString() 
# method of a slog term looks for 
# Config.config.saysOperator, which is 
# set by safelog.saysOperator. 
#
# The slang parser doesn't add speakers
# into terms. So we need to set 
# safelog.saysOperator to false.

safelog {
  saysOperator = false
}

saferuntime {
  jvmCompilerPath = "."
}
spray.client {
   # the maximum number of parallel connections that an HttpConduit
   # is allowed to establish to a host, must be greater than zero
   max-connections = 100000
}

safe {
  service {
    #interface = localhost
    #interface = 152.3.144.16
    interface = 152.3.136.26
    interface = ${?HOST}

    #port = 11133
    port = 7777
    port = ${?PORT}

    ask-timeout = 251s
    requestTimeout = 30s

    cacheSize = 4048576

    branchingFactor = 0.5
    dirName = "/home/vamsi/safeliteBenchmark/data"



    prefetchPolicy = preloadAndMaterialize

    fetchPolicy = test
    #fetchPolicy = buildFromView
    #fetchPolicy = fetchFromView
    userSize = 16
    numSlices = 256
    #userSize = 16
    #numSlices = 64
    #userSize = 16
    #numSlices = 1024
  }
}

safe.safesets.cache {
  initialCapacity = 65536 # 2^16 * 1kB ~ 64MB
  loadFactor      = 0.75f # reblance after reaching this limit
  concurrency     = 2     # in simple client mode, not many concurrent requests are made
}

# Configuration for multi-principal programming
safe.multiprincipal {
  keyPairDir = "/home/qiang/Desktop/safe-new-version-benchmark/safe/safe-server/src/main/resources/multi-principal-keys/" # dir of the keys of the multiple principals 
}

safe.safesets {
  requestTimeout = 30s
  #storeURI = "http://152.3.145.10:7777/safesetsPost"
  storeURI = "http://152.3.145.10:8098/types/safesets/buckets/safe/keys"
  #storeURI = "http://152.3.144.16:10018/buckets/geni/keys"
  #storeURI = "http://205.172.170.79:7777/buckets/geni/keys"
}
