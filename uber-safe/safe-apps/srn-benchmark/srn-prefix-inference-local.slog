(**
 * Substitution:
 * GlobalRootScid
 *) 

access(?P, ?O) :- 
  ?Speaker: accessPrefix(?Group, ?Prefix), 
  srnRelativeNameToID(GlobalRootScid, ?Prefix, ?PrefixScid), 
  ?PrefixRoot := rootId(?PrefixScid),
  ?Speaker = ?PrefixRoot,  (* They must match *)
  srnIDPathTo(?PrefixScid, ?O),
  membership(?Group, ?P).

(*Inference rules for SRN *)

(* ?UpstreamOName is a string in the form of a/b/c/d *)
srnPathTo(?UpstreamOName, ?DownstreamScid) :- 
  srnRelativeNameToID(GlobalRootScid, ?UpstreamOName, ?UpstreamScid),  (* GlobalRootScid is a well-known global variable *) 
  srnIDPathTo(?UpstreamScid, ?DownstreamScid). 

srnRelativeNameToID(?RootScid, ?Name, ?Scid) :-
  singleComponent(?Name),
  ?Root := rootId(?RootScid),
  ?Root: nameObject(?Name, ?Scid, ?RootScid).

srnRelativeNameToID(?RootScid, ?Name, ?Scid) :-
  splitHead(?Name, ?FirstComponent, ?RestName),
  ?Root := rootId(?RootScid),
  ?Root: nameObject(?FirstComponent, ?ChildScid, ?RootScid),
  srnRelativeNameToID(?ChildScid, ?RestName, ?Scid).  

srnIDPathTo(?UpstreamScid, ?DownstreamScid) :- 
  ?UpstreamRoot := rootId(?UpstreamScid),
  ?UpstreamRoot: nameObject(?Name, ?DownstreamScid, ?UpstreamScid).

srnIDPathTo(?UpstreamScid, ?DownstreamScid) :-
  ?UpstreamRoot := rootId(?UpstreamScid),
  ?UpstreamRoot: nameObject(?Name, ?MiddleScid, ?UpstreamScid),
  srnIDPathTo(?MiddleScid, ?DownstreamScid).                   


(* Inference rules for the group service *)
membership(?Group, ?User) :- membership(?Group, ?User, _).

membership(?Group, ?User, ?Delegatable) :-
  ?GRoot := rootId(?Group), ?GRoot: groupMember(?Group, ?User, ?Delegatable).

membership(?Group, ?User, ?Delegatable) :-
  ?Delegator: delegateMembership(?Group, ?User, ?Delegatable),
  membership(?Group, ?Delegator, true).

membership(?Group, ?User, ?Delegatable) :-
  delegateGroup(?Group, ?ToGroup), 
  membership(?ToGroup, ?User, ?Delegatable).

delegateGroup(?UpstreamGroup, ?DownstreamGroup) :-
  ?UpstreamRoot := rootId(?UpstreamGroup),
  ?UpstreamRoot: delegateGroup(?UpstreamGroup, ?DownstreamGroup).

(* This is redundant
delegateGroup(?UpstreamGroup, ?DownstreamGroup) :-
  ?UpstreamRoot := rootId(?UpstreamGroup),
  ?UpstreamRoot: delegateGroup(?UpstreamGroup, ?MiddleGroup),
  delegateGroup(?MiddleGroup, ?DownstreamGroup).
*) 
