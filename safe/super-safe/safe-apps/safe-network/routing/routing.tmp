defcon makeMyIdenttitySet(?CN) :-
  spec("Construct the identity set of self"),
  {
    principal($SelfKey):- spec("identity set for $CN").
  }.

defpost postIdSet(?CN):-[makeMyIdentitySet(?CN)].

defcon routingPolicy() :-
  {
    route(?Src,?Dst,?Path) :-
      ?Src: neighbor(?Dst),
      eq([?Dst],?Path).
    
    route(?Src, ?Dst, ?Path) :-
      ?Src: neighbor(?Nb),
      ?Src: acceptRoute(?Nb, ?Dst),
      ?Nb: advertise(?Dst, ?Path,?Src).

    label("routing policy").
  }.

defpost postRoutingPolicy() :- [routingPolicy()].

defcon advertisePolicy() :-
  {
    advertise(?Nb,?Dst,?Path,?Src):-
      ?Src: carryTraffic(?Nb,?Dst),
      ?Src: neighbor(?Nb),
      route(?Nb,?Dst,?IPath),
      eq([?Nb|?IPath],?Path).

    label("advertise policy").
  }.


defpost postAdvertisePolicy() :- [advertisePolicy()].

defcon addNeighbor(?Nb) :-
  ?NeighborofN := label("add neighbor/?Nb"),
  ?CarryTrafficofN := label("carry traffic/?Nb"),
  ?AcceptRouteofN := label("accept route/?Nb"),
  {
    neighbor($Nb).
    link($NeighborofN).
    link($AcceptRouteofN).
    link($CarryTrafficofN).
    label("add neighbor/$Self").
  }.

defpost postNeighbor(?Nb):- [addNeighbor(?Nb)].

defcon carryTrafficPolicy(?Src, ?Dst) :-
  {
    carryTraffic($Src, $Dst).
    label("carry traffic/$Self").
  }.

defpost postCarryTraffic(?Src,?Dst):- [carryTrafficPolicy(?Src,?Dst)]. 

defcon acceptRoutePolicy(?Mid, ?Dst):-
  {
    acceptRoute($Mid, $Dst).
    label("accept route/$Self").
  }.

defpost postAcceptRoute(?Mid,?Dst) :- [acceptRoutePolicy(?Mid,?Dst)].

defguard addRoute(?Dst,?Path) :-
  ?RoutingPolicyRef := label("routing policy"),
  ?AdvertisePolicy := label("advertise policy"),
  ?AcceptRoute := label("accept route/$Self"),
  ?Neighbor := label("add neighbor/$Self"),
  ?CarryTraffic := label("carry traffic/$Self"),
  {
    link($Neighbor).
    link($AcceptRoute).
    link($CarryTraffic).
    link($RoutingPolicyRef).
    link($AdvertisePolicy).
    route($Self,$Dst, $Path)?
  }.

